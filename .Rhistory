install.packages("rmarkdown", dep = TRUE)
library("dslabs")
data(na_example)
print(na_example)
length(data(na_example)[NA])
length(na_example[NA])
apply(na_example, 1:2, NA <- 0)
apply(na_example, 1:2, "NA" <- 0)
for(i in na_example){
if(i <- NA)
print(0)
}
new_data_set <- for(i in na_example){
if(i <- NA){
print(0)
} else {
print(i)
}
}
new_data_set <- for(i in na_example[]){
if(i <- NA){
print(0)
} else {
print(i)
}
}
new_data_set <- for(i in na_example[1:2]){
if(i <- NA){
print(0)
} else {
print(i)
}
}
new_data_set<- if(i <- na_example[NA]){
print(0)
else {
new_data_set<- if(i <- na_example[NA]){
print(0)
}
new_data_set<- for(i in na_example[NA]){
print(0)
}
new_data_set<- for(i in na_example){
if(i <- na_example[NA]){
print(0)
}
}
new_data_set<- for(i in na_example){
apply(na_example[NA], 1:2, print(0))
}
new_data_set<- for(i in na_example){
apply(na_example[NA], 1:2, print("0"))
}
new_data_set<- for(i in na_example[NA]){
print(0)
}
mutate(na_example, for(i in na_example[NA]) print(0))
install.packages(dplyr)
mutate(na_example, for(i in na_example[NA]) print(0))
install.packages("dplyr")
mutate(na_example, for(i in na_example[NA]) print(0))
install.packages("dplyr")
library(dplyr)
mutate(na_example, for(i in na_example[NA]) print(0))
install.packages("dplyr")
library(dplyr)
mutate(na_example, for(i in na_example[NA]) {print(0)})
library(dplyr)
mutate(na_example, for(i in na_example[NA]) {print(0)})
fun <- for(i in na_example[NA]) {print(0)}
library(dplyr)
mutate(na_example,fun)
total_number_na <- sum(is.na(na_example))
print(total_number_na)
library(dplyr)
mutate(na_example, na_example[NA]= print(0))
new_data_frame <- na_example
new_data_frame[is.na(new_data_frame)] <- 0
print(new_data_frame)
library(dslabs)
data(na_example)
print(na_example)
new_data_frame <- na_example
new_data_frame[is.na(new_data_frame)] <- 0
print(new_data_frame)
total_number_zero <- sum(is.0(new_data_frame))
total_nas <- sum(is.na(new_df))
total_nas <- sum(is.na(new_data_frame))
cat("Total number of NAs in the new data frame:", total_nas, "\n")
